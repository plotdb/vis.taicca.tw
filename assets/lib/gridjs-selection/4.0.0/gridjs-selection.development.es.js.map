{"version":3,"file":"gridjs-selection.development.es.js","sources":["../src/rowSelection/store.ts","../src/rowSelection/actions.ts","../src/rowSelection/rowSelection.tsx"],"sourcesContent":["import { BaseStore } from 'gridjs';\nimport { RowSelectionActionsType } from './actions';\n\nexport type RowSelectionStoreState = {\n  rowIds: string[];\n};\n\nexport class RowSelectionStore extends BaseStore<\n  RowSelectionStoreState,\n  RowSelectionActionsType\n> {\n  getInitialState(): RowSelectionStoreState {\n    return { rowIds: [] };\n  }\n\n  handle(type, payload): void {\n    if (type === 'CHECK') {\n      const { ROW_ID } = payload;\n      this.check(ROW_ID);\n    }\n\n    if (type === 'UNCHECK') {\n      const { ROW_ID } = payload;\n      this.uncheck(ROW_ID);\n    }\n  }\n\n  private check(rowId: string): void {\n    // rowId already exists\n    if (this.state.rowIds.indexOf(rowId) > -1) return;\n\n    this.setState({\n      rowIds: [rowId, ...this.state.rowIds],\n    });\n  }\n\n  private uncheck(rowId: string): void {\n    const index = this.state.rowIds.indexOf(rowId);\n\n    // rowId doesn't exist\n    if (index === -1) return;\n\n    const cloned = [...this.state.rowIds];\n    cloned.splice(index, 1);\n\n    this.setState({\n      rowIds: cloned,\n    });\n  }\n}\n","import { BaseActions } from 'gridjs';\n\nexport interface RowSelectionActionsType {\n  CHECK: {\n    ROW_ID: string;\n  };\n\n  UNCHECK: {\n    ROW_ID: string;\n  };\n}\n\nexport class RowSelectionActions extends BaseActions<RowSelectionActionsType> {\n  check(rowId: string): void {\n    this.dispatch('CHECK', {\n      ROW_ID: rowId,\n    });\n  }\n\n  uncheck(rowId: string): void {\n    this.dispatch('UNCHECK', {\n      ROW_ID: rowId,\n    });\n  }\n}\n","import { h } from 'gridjs';\nimport { RowSelectionStore, RowSelectionStoreState } from './store';\nimport { RowSelectionActions } from './actions';\nimport { className } from 'gridjs';\nimport { Row } from 'gridjs';\nimport { PluginBaseComponent, PluginBaseProps } from 'gridjs';\nimport { Cell } from 'gridjs';\n\ninterface RowSelectionState {\n  isChecked: boolean;\n}\n\ninterface RowSelectionProps {\n  // row identifier\n  id: (row: Row) => string;\n  // it's optional because thead doesn't have a row\n  row?: Row;\n  cell?: Cell;\n  store?: RowSelectionStore;\n  selectedClassName?: string;\n  checkboxClassName?: string;\n}\n\nexport class RowSelection extends PluginBaseComponent<\n  RowSelectionProps & PluginBaseProps<RowSelection>,\n  RowSelectionState\n> {\n  private readonly actions: RowSelectionActions;\n  private readonly store: RowSelectionStore;\n  private readonly storeUpdatedFn: (...args) => void;\n\n  private isDataCell = (props): boolean => props.row !== undefined;\n  private getParentTR = (): Element =>\n    this.base &&\n    this.base.parentElement &&\n    (this.base.parentElement.parentElement as Element);\n\n  static defaultProps = {\n    selectedClassName: className('tr', 'selected'),\n    checkboxClassName: className('checkbox'),\n  };\n\n  constructor(\n    props: RowSelectionProps & PluginBaseProps<RowSelection>,\n    context,\n  ) {\n    super(props, context);\n\n    this.state = {\n      isChecked: false,\n    };\n\n    // store/dispatcher is required only if we are rendering a TD (not a TH)\n    if (this.isDataCell(props)) {\n      // create a new store if a global store doesn't exist\n      if (!props.store) {\n        const store = new RowSelectionStore(this.config.dispatcher);\n        this.store = store;\n\n        // to reuse for other checkboxes\n        props.plugin.props.store = store;\n      } else {\n        // restore the existing store\n        this.store = props.store;\n      }\n\n      this.actions = new RowSelectionActions(this.config.dispatcher);\n      this.storeUpdatedFn = this.storeUpdated.bind(this);\n      this.store.on('updated', this.storeUpdatedFn);\n\n      // also mark this checkbox as checked if cell.data is true\n      if (props.cell.data) {\n        this.check();\n      }\n    }\n  }\n\n  componentWillUnmount(): void {\n    this.store.off('updated', this.storeUpdatedFn);\n  }\n\n  componentDidMount(): void {\n    if (this.store) this.storeUpdated(this.store.state);\n  }\n\n  private storeUpdated(state: RowSelectionStoreState): void {\n    const parent = this.getParentTR();\n\n    if (!parent) return;\n\n    const isChecked = state.rowIds.indexOf(this.props.id(this.props.row)) > -1;\n\n    this.setState({\n      isChecked: isChecked,\n    });\n\n    if (isChecked) {\n      parent.classList.add(this.props.selectedClassName);\n    } else {\n      parent.classList.remove(this.props.selectedClassName);\n    }\n  }\n\n  private check(): void {\n    this.actions.check(this.props.id(this.props.row));\n    this.props.cell.update(true);\n  }\n\n  private uncheck(): void {\n    this.actions.uncheck(this.props.id(this.props.row));\n    this.props.cell.update(false);\n  }\n\n  private toggle(): void {\n    if (this.state.isChecked) {\n      this.uncheck();\n    } else {\n      this.check();\n    }\n  }\n\n  render() {\n    if (this.isDataCell(this.props)) {\n      return (\n        <input\n          type={'checkbox'}\n          checked={this.state.isChecked}\n          onChange={() => this.toggle()}\n          className={this.props.checkboxClassName}\n        />\n      );\n    }\n\n    return null;\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAOuC,qCAGtC;IAHD;;KA0CC;IAtCC,2CAAe,GAAf;QACE,OAAO,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC;KACvB;IAED,kCAAM,GAAN,UAAO,IAAI,EAAE,OAAO;QAClB,IAAI,IAAI,KAAK,OAAO,EAAE;YACZ,IAAA,MAAM,GAAK,OAAO,OAAZ,CAAa;YAC3B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;SACpB;QAED,IAAI,IAAI,KAAK,SAAS,EAAE;YACd,IAAA,MAAM,GAAK,OAAO,OAAZ,CAAa;YAC3B,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SACtB;KACF;IAEO,iCAAK,GAAb,UAAc,KAAa;;QAEzB,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAAE,OAAO;QAElD,IAAI,CAAC,QAAQ,CAAC;YACZ,MAAM,kBAAG,KAAK,GAAK,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;SACtC,CAAC,CAAC;KACJ;IAEO,mCAAO,GAAf,UAAgB,KAAa;QAC3B,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;;QAG/C,IAAI,KAAK,KAAK,CAAC,CAAC;YAAE,OAAO;QAEzB,IAAM,MAAM,kBAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QACtC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QAExB,IAAI,CAAC,QAAQ,CAAC;YACZ,MAAM,EAAE,MAAM;SACf,CAAC,CAAC;KACJ;IACH,wBAAC;AAAD,CA1CA,CAAuC,SAAS;;;ICKP,uCAAoC;IAA7E;;KAYC;IAXC,mCAAK,GAAL,UAAM,KAAa;QACjB,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE;YACrB,MAAM,EAAE,KAAK;SACd,CAAC,CAAC;KACJ;IAED,qCAAO,GAAP,UAAQ,KAAa;QACnB,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE;YACvB,MAAM,EAAE,KAAK;SACd,CAAC,CAAC;KACJ;IACH,0BAAC;AAAD,CAZA,CAAyC,WAAW;;;ICWlB,gCAGjC;IAgBC,sBACE,KAAwD,EACxD,OAAO;QAFT,YAIE,kBAAM,KAAK,EAAE,OAAO,CAAC,SA6BtB;QA5CO,gBAAU,GAAG,UAAC,KAAK,IAAc,OAAA,KAAK,CAAC,GAAG,KAAK,SAAS,GAAA,CAAC;QACzD,iBAAW,GAAG;YACpB,OAAA,KAAI,CAAC,IAAI;gBACT,KAAI,CAAC,IAAI,CAAC,aAAa;gBACtB,KAAI,CAAC,IAAI,CAAC,aAAa,CAAC,aAAyB;SAAA,CAAC;QAanD,KAAI,CAAC,KAAK,GAAG;YACX,SAAS,EAAE,KAAK;SACjB,CAAC;;QAGF,IAAI,KAAI,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE;;YAE1B,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE;gBAChB,IAAM,KAAK,GAAG,IAAI,iBAAiB,CAAC,KAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;gBAC5D,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;;gBAGnB,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;aAClC;iBAAM;;gBAEL,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;aAC1B;YAED,KAAI,CAAC,OAAO,GAAG,IAAI,mBAAmB,CAAC,KAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;YAC/D,KAAI,CAAC,cAAc,GAAG,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;YACnD,KAAI,CAAC,KAAK,CAAC,EAAE,CAAC,SAAS,EAAE,KAAI,CAAC,cAAc,CAAC,CAAC;;YAG9C,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE;gBACnB,KAAI,CAAC,KAAK,EAAE,CAAC;aACd;SACF;;KACF;IAED,2CAAoB,GAApB;QACE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;KAChD;IAED,wCAAiB,GAAjB;QACE,IAAI,IAAI,CAAC,KAAK;YAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;KACrD;IAEO,mCAAY,GAApB,UAAqB,KAA6B;QAChD,IAAM,MAAM,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QAElC,IAAI,CAAC,MAAM;YAAE,OAAO;QAEpB,IAAM,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAE3E,IAAI,CAAC,QAAQ,CAAC;YACZ,SAAS,EAAE,SAAS;SACrB,CAAC,CAAC;QAEH,IAAI,SAAS,EAAE;YACb,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;SACpD;aAAM;YACL,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;SACvD;KACF;IAEO,4BAAK,GAAb;QACE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;QAClD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;KAC9B;IAEO,8BAAO,GAAf;QACE,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;QACpD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;KAC/B;IAEO,6BAAM,GAAd;QACE,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE;YACxB,IAAI,CAAC,OAAO,EAAE,CAAC;SAChB;aAAM;YACL,IAAI,CAAC,KAAK,EAAE,CAAC;SACd;KACF;IAED,6BAAM,GAAN;QAAA,iBAaC;QAZC,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;YAC/B,QACE,aACE,IAAI,EAAE,UAAU,EAChB,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,EAC7B,QAAQ,EAAE,cAAM,OAAA,KAAI,CAAC,MAAM,EAAE,GAAA,EAC7B,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,iBAAiB,GACvC,EACF;SACH;QAED,OAAO,IAAI,CAAC;KACb;IAjGM,yBAAY,GAAG;QACpB,iBAAiB,EAAE,SAAS,CAAC,IAAI,EAAE,UAAU,CAAC;QAC9C,iBAAiB,EAAE,SAAS,CAAC,UAAU,CAAC;KACzC,CAAC;IA+FJ,mBAAC;CAAA,CAhHiC,mBAAmB;;;;"}